/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "effectiveTime",
        type: "uint256",
      },
    ],
    name: "LogChangeVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "encode64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "hook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testWrongCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testWrongCall2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testWrongCheckpoint",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003553480156200001657600080fd5b5060405162001a8b38038062001a8b833981016040819052620000399162000348565b83516200004e906001906020870190620001d5565b50825162000064906000906020860190620001d5565b50600282905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f906200009f9060019062000419565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f1981840301815291905280516020909101206007556200012a33600062000136565b505050505050620004e3565b6001600160a01b03821660009081526004602052604081208054839190839062000162908490620004bc565b9250508190555081600360008282546200017d9190620004bc565b909155505060408051600081526001600160a01b03851660208201529081018390527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a150600192915050565b828054620001e390620003dd565b90600052602060002090601f01602090048101928262000207576000855562000252565b82601f106200022257805160ff191683800117855562000252565b8280016001018555821562000252579182015b828111156200025257825182559160200191906001019062000235565b506200026092915062000264565b5090565b5b8082111562000260576000815560010162000265565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a357600080fd5b81516001600160401b0380821115620002c057620002c06200027b565b604051601f8301601f19908116603f01168101908282118183101715620002eb57620002eb6200027b565b816040528381526020925086838588010111156200030857600080fd5b600091505b838210156200032c57858201830151818301840152908201906200030d565b838211156200033e5760008385830101525b9695505050505050565b600080600080608085870312156200035f57600080fd5b84516001600160401b03808211156200037757600080fd5b620003858883890162000291565b955060208701519150808211156200039c57600080fd5b50620003ab8782880162000291565b60408701516060880151919550935090506001600160a01b0381168114620003d257600080fd5b939692955090935050565b600181811c90821680620003f257607f821691505b6020821081036200041357634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200043657607f831692505b602080841082036200045657634e487b7160e01b86526022600452602486fd5b8180156200046d57600181146200047f57620004ae565b60ff19861689528489019650620004ae565b60008a81526020902060005b86811015620004a65781548b8201529085019083016200048b565b505084890196505b509498975050505050505050565b60008219821115620004de57634e487b7160e01b600052601160045260246000fd5b500190565b61159880620004f36000396000f3fe6080604052600436106101815760003560e01c80637ecebe00116100d1578063a9059cbb1161008a578063d505accf11610064578063d505accf1461043e578063dd62ed3e1461045e578063e3d670d714610496578063fc0c546a146104cc57600080fd5b8063a9059cbb146103f5578063d0e30db014610415578063d294f0931461041d57600080fd5b80637ecebe00146103495780638f5c286a1461037657806392e4dbea1461038b57806395d89b41146103a05780639a7bff79146103b55780639dc29fac146103d557600080fd5b8063313ce5671161013e5780634830155a116101185780634830155a146102c7578063677342ce146102e757806370a08231146103075780637bbdd3771461033457600080fd5b8063313ce5671461027b5780633644e5151461029157806340c10f19146102a757600080fd5b806306fdde0314610186578063095ea7b3146101b157806318160ddd146101e157806323b872dd146102055780632e1a7d4d1461022557806330adf81f14610247575b600080fd5b34801561019257600080fd5b5061019b6104e7565b6040516101a89190611117565b60405180910390f35b3480156101bd57600080fd5b506101d16101cc36600461115f565b610575565b60405190151581526020016101a8565b3480156101ed57600080fd5b506101f760035481565b6040519081526020016101a8565b34801561021157600080fd5b506101d161022036600461118b565b6105e0565b34801561023157600080fd5b506102456102403660046111cc565b6106a8565b005b34801561025357600080fd5b506101f77f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b34801561028757600080fd5b506101f760025481565b34801561029d57600080fd5b506101f760075481565b3480156102b357600080fd5b506101d16102c236600461115f565b610719565b3480156102d357600080fd5b5061019b6102e23660046111fb565b61072f565b3480156102f357600080fd5b506101f76103023660046111cc565b610740565b34801561031357600080fd5b506101f76103223660046112ac565b60046020526000908152604090205481565b34801561034057600080fd5b5061024561074b565b34801561035557600080fd5b506101f76103643660046112ac565b60086020526000908152604090205481565b34801561038257600080fd5b5061024561075b565b34801561039757600080fd5b506102456107c4565b3480156103ac57600080fd5b5061019b6107ea565b3480156103c157600080fd5b506102456103d03660046112c9565b6107f7565b3480156103e157600080fd5b506101d16103f036600461115f565b610885565b34801561040157600080fd5b506101d161041036600461115f565b610900565b61024561090d565b34801561042957600080fd5b506040805160008082526020820152016101a8565b34801561044a57600080fd5b5061024561045936600461135f565b610933565b34801561046a57600080fd5b506101f76104793660046113d6565b600560209081526000928352604080842090915290825290205481565b3480156104a257600080fd5b506101f76104b13660046112ac565b6001600160a01b031660009081526004602052604090205490565b3480156104d857600080fd5b506040513081526020016101a8565b600180546104f49061140f565b80601f01602080910402602001604051908101604052809291908181526020018280546105209061140f565b801561056d5780601f106105425761010080835404028352916020019161056d565b820191906000526020600020905b81548152906001019060200180831161055057829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b03871684529091528082208490555190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925916105cf919086908690611443565b60405180910390a150600192915050565b6001600160a01b0383166000908152600560209081526040808320338452909152812054828110156106505760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f75676820616c6c6f77616e636560601b60448201526064015b60405180910390fd5b6000198114610692576001600160a01b03851660009081526005602090815260408083203384529091528120805485929061068c90849061147d565b90915550505b61069d858585610b9f565b9150505b9392505050565b336000908152600460205260409020548111156106c457600080fd5b33600090815260046020526040812080548392906106e390849061147d565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610715573d6000803e3d6000fd5b5050565b60006107258383610c41565b5060019392505050565b606061073a82610cbe565b92915050565b600061073a82610e28565b6107586006600080610e98565b50565b6040805130602482018190526000196044808401919091528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b1790528351808501909452600584526477726f6e6760d81b9084015261075892909190610fde565b604080516020808201835260008083528351918201909352828152610758929190610fde565b600080546104f49061140f565b6000610805828401846112ac565b60405163022c0d9f60e01b8152600060048201819052602482018190523060448301526080606483015260848201529091506001600160a01b0382169063022c0d9f9060a401600060405180830381600087803b15801561086557600080fd5b505af1158015610879573d6000803e3d6000fd5b50505050505050505050565b60008160036000828254610899919061147d565b90915550506001600160a01b038316600090815260046020526040812080548492906108c690849061147d565b90915550506040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105cf9085906000908690611443565b60006106a1338484610b9f565b336000908152600460205260408120805434929061092c908490611494565b9091555050565b428410156109775760405162461bcd60e51b815260206004820152601160248201527014dd18589b19558c4e8811561412549151607a1b6044820152606401610647565b6007546001600160a01b038816600090815260086020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876109ca836114ac565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120604051602001610a4392919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610aae573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610ae45750886001600160a01b0316816001600160a01b0316145b610b305760405162461bcd60e51b815260206004820152601b60248201527f537461626c6556313a20494e56414c49445f5349474e415455524500000000006044820152606401610647565b6001600160a01b03808a166000908152600560209081526040808320938c168352929052819020889055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610b8c908b908b908b90611443565b60405180910390a1505050505050505050565b6001600160a01b038316600090815260046020526040812080548391908390610bc990849061147d565b90915550506001600160a01b03831660009081526004602052604081208054849290610bf6908490611494565b90915550506040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c2f90869086908690611443565b60405180910390a15060019392505050565b6001600160a01b038216600090815260046020526040812080548391908390610c6b908490611494565b925050819055508160036000828254610c849190611494565b90915550506040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105cf9060009086908690611443565b80516060906000819003610ce2575050604080516020810190915260008152919050565b60006003610cf1836002611494565b610cfb91906114c5565b610d069060046114e7565b90506000610d15826020611494565b67ffffffffffffffff811115610d2d57610d2d6111e5565b6040519080825280601f01601f191660200182016040528015610d57576020820181803683370190505b5090506000604051806060016040528060408152602001611523604091399050600181016020830160005b86811015610de3576003818a01810151603f601282901c8116860151600c83901c8216870151600684901c831688015192909316870151600891821b60ff94851601821b92841692909201901b91160160e01b835260049092019101610d82565b506003860660018114610dfd5760028114610e0e57610e1a565b613d3d60f01b600119830152610e1a565b603d60f81b6000198301525b505050918152949350505050565b60006003821115610e895750806000610e426002836114c5565b610e4d906001611494565b90505b81811015610e8357905080600281610e6881866114c5565b610e729190611494565b610e7c91906114c5565b9050610e50565b50919050565b8115610e93575060015b919050565b600082600003610ede5760405162461bcd60e51b8152602060048201526011602482015270456d70747920636865636b706f696e747360781b6044820152606401610647565b81846000610eed60018761147d565b81526020019081526020016000206000015411610f1657610f0f60018461147d565b90506106a1565b600080805260208590526040902054821015610f34575060006106a1565b600080610f4260018661147d565b90505b81811115610fd55760006002610f5b848461147d565b610f6591906114c5565b610f6f908361147d565b60008181526020898152604091829020825180840190935280548084526001909101549183019190915291925090869003610faf575092506106a1915050565b8051861115610fc057819350610fce565b610fcb60018361147d565b92505b5050610f45565b50949350505050565b60606001600160a01b0384163b6110375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610647565b600080856001600160a01b0316856040516110529190611506565b6000604051808303816000865af19150503d806000811461108f576040519150601f19603f3d011682016040523d82523d6000602084013e611094565b606091505b50915091506110a48282866110ae565b9695505050505050565b606083156110bd5750816106a1565b8251156110cd5782518084602001fd5b8160405162461bcd60e51b81526004016106479190611117565b60005b838110156111025781810151838201526020016110ea565b83811115611111576000848401525b50505050565b60208152600082518060208401526111368160408501602087016110e7565b601f01601f19169190910160400192915050565b6001600160a01b038116811461075857600080fd5b6000806040838503121561117257600080fd5b823561117d8161114a565b946020939093013593505050565b6000806000606084860312156111a057600080fd5b83356111ab8161114a565b925060208401356111bb8161114a565b929592945050506040919091013590565b6000602082840312156111de57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561120d57600080fd5b813567ffffffffffffffff8082111561122557600080fd5b818401915084601f83011261123957600080fd5b81358181111561124b5761124b6111e5565b604051601f8201601f19908116603f01168101908382118183101715611273576112736111e5565b8160405282815287602084870101111561128c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156112be57600080fd5b81356106a18161114a565b6000806000806000608086880312156112e157600080fd5b85356112ec8161114a565b94506020860135935060408601359250606086013567ffffffffffffffff8082111561131757600080fd5b818801915088601f83011261132b57600080fd5b81358181111561133a57600080fd5b89602082850101111561134c57600080fd5b9699959850939650602001949392505050565b600080600080600080600060e0888a03121561137a57600080fd5b87356113858161114a565b965060208801356113958161114a565b95506040880135945060608801359350608088013560ff811681146113b957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156113e957600080fd5b82356113f48161114a565b915060208301356114048161114a565b809150509250929050565b600181811c9082168061142357607f821691505b602082108103610e8357634e487b7160e01b600052602260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561148f5761148f611467565b500390565b600082198211156114a7576114a7611467565b500190565b6000600182016114be576114be611467565b5060010190565b6000826114e257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561150157611501611467565b500290565b600082516115188184602087016110e7565b919091019291505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220d25bbe30bcb02d210266f95c14c48b8981e356e5fa7144655104d87b11940d4364736f6c634300080d0033";

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    arg3: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      arg3,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    arg3: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      arg3,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
