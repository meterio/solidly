/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bribe, BribeInterface } from "../Bribe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_allowedRewardTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reward",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "ClaimRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reward",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotifyReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "addressToTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxRuns",
        type: "uint256",
      },
    ],
    name: "batchUpdateRewardPerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "derivedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "derivedBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "derivedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPriorBalanceIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPriorRewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPriorSupplyIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getRewardForOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRewardToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastEarn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "left",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "registerRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerTokenCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenNumCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supplyCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyNumCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenIdToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260016000553480156200001657600080fd5b5060405162002db838038062002db88339810160408190526200003991620002cb565b60006080819052600180546001600160a01b0319166001600160a01b0385161790558282825b8151811015620000e25760006001600160a01b0316828281518110620000895762000089620003b4565b60200260200101516001600160a01b031614620000cd57620000cd828281518110620000b957620000b9620003b4565b60200260200101516200017a60201b60201c565b80620000d981620003ca565b9150506200005f565b50505050816001600160a01b031660a0816001600160a01b031681525050816001600160a01b0316631f8507166040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200013f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001659190620003f2565b6001600160a01b031660c05250620004179050565b600c54600a11620001d25760405162461bcd60e51b815260206004820152601660248201527f546f6f206d616e792072657761726420746f6b656e730000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff1615620002325760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606401620001c9565b6001600160a01b03166000818152600d60205260408120805460ff19166001908117909155600c805491820181559091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319169091179055565b80516001600160a01b0381168114620002b057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215620002df57600080fd5b620002ea8362000298565b602084810151919350906001600160401b03808211156200030a57600080fd5b818601915086601f8301126200031f57600080fd5b815181811115620003345762000334620002b5565b8060051b604051601f19603f830116810181811085821117156200035c576200035c620002b5565b6040529182528482019250838101850191898311156200037b57600080fd5b938501935b82851015620003a457620003948562000298565b8452938501939285019262000380565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b600060018201620003eb57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200040557600080fd5b620004108262000298565b9392505050565b60805160a05160c051612947620004716000396000818161032501528181610be10152610dd00152600081816103df01528181610ac401528181610b8b0152610d0501526000818161045f015261178201526129476000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80637bb7bed11161013b578063d35e2544116100b8578063f12297771161007c578063f122977714610631578063f320772314610644578063f5f8d36514610657578063f7412baf1461066a578063fd3140981461069157600080fd5b8063d35e2544146105d9578063d7da4bb0146105ec578063da09d19d146105f5578063e46dbc9814610615578063e8111a121461062857600080fd5b8063a7852afa116100ff578063a7852afa14610558578063aa4796521461056b578063b5fd73f81461058b578063b66503cf146105be578063bf199e62146105d157600080fd5b80637bb7bed1146104d457806399bcc052146104e75780639ce43f90146104fa5780639e2bf22c1461051a578063a495e5b51461052d57600080fd5b80633d509c97116101c957806368fcee1a1161018d57806368fcee1a146104475780636f307dc31461045a5780636fcfff451461048157806370a08231146104a157806376f4be36146104c157600080fd5b80633d509c97146103c557806346c96aac146103da578063570ca7351461040157806363fb415b146104145780636511bf2e1461043457600080fd5b80631f850716116102105780631f85071614610320578063211dc32d14610347578063221ca18c1461035a5780632ce9aead1461037a5780633ca068b61461039a57600080fd5b806301316ddf1461024d57806308bb76a5146102995780630cdfebfa146102c4578063115c6f39146102f657806318160ddd14610317575b600080fd5b61027f61025b3660046125a0565b60126020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152015b60405180910390f35b6102ac6102a73660046125cc565b6106a4565b6040516001600160a01b039091168152602001610290565b61027f6102d23660046125a0565b600e6020908152600092835260408084209091529082529020805460019091015482565b6103096103043660046125a0565b6106b5565b604051908152602001610290565b610309600a5481565b6102ac7f000000000000000000000000000000000000000000000000000000000000000081565b6103096103553660046125e5565b6106c8565b61030961036836600461261e565b60046020526000908152604090205481565b61030961038836600461261e565b60066020526000908152604090205481565b6103096103a83660046125e5565b600960209081526000928352604080842090915290825290205481565b6103d86103d336600461261e565b6106d4565b005b6102ac7f000000000000000000000000000000000000000000000000000000000000000081565b6001546102ac906001600160a01b031681565b61030961042236600461261e565b60036020526000908152604090205481565b61030961044236600461261e565b6109b4565b6103d86104553660046125a0565b6109c5565b6102ac7f000000000000000000000000000000000000000000000000000000000000000081565b61030961048f36600461261e565b600f6020526000908152604090205481565b6103096104af36600461261e565b600b6020526000908152604090205481565b6103096104cf3660046125cc565b6109ff565b6102ac6104e23660046125cc565b610a0a565b6103096104f536600461261e565b610a34565b61030961050836600461261e565b60076020526000908152604090205481565b6103d861052836600461263b565b610ab9565b61030961053b3660046125e5565b600860209081526000928352604080842090915290825290205481565b6103d8610566366004612673565b610b80565b61030961057936600461261e565b60136020526000908152604090205481565b6105ae61059936600461261e565b600d6020526000908152604090205460ff1681565b6040519015158152602001610290565b6103d86105cc3660046125a0565b610c6e565b600c54610309565b6103096105e736600461261e565b610c7c565b61030960025481565b61030961060336600461261e565b60056020526000908152604090205481565b6103d861062336600461261e565b610c9a565b61030960115481565b61030961063f36600461261e565b610cef565b6103d861065236600461263b565b610cfa565b6103d8610665366004612673565b610db4565b61027f6106783660046125cc565b6010602052600090815260409020805460019091015482565b61027f61069f3660046125a0565b610e94565b60006106af82610ead565b92915050565b60006106c18383610ef8565b9392505050565b60006106c18383610f4d565b6001546001600160a01b031633146107225760405162461bcd60e51b815260206004820152600c60248201526b2737ba1037b832b930ba37b960a11b60448201526064015b60405180910390fd5b6001600160a01b038116600090815260056020526040902054421161077d5760405162461bcd60e51b815260206004820152601160248201527014995dd85c991cc81b9bdd08195b991959607a1b6044820152606401610719565b6001600160a01b0381166000908152600d602052604090205460ff166107d85760405162461bcd60e51b815260206004820152601060248201526f2737ba103932bbb0b932103a37b5b2b760811b6044820152606401610719565b6001600160a01b0381166000908152600d60205260409020805460ff19169055600c54600381116108575760405162461bcd60e51b8152602060048201526024808201527f4669727374203320746f6b656e732073686f756c64206e6f742062652072656d6044820152631bdd995960e21b6064820152608401610719565b600360005b828210156108b7576000600c838154811061087957610879612744565b6000918252602090912001546001600160a01b039081169150851681036108a45760019150506108b7565b50816108af81612770565b92505061085c565b806109045760405162461bcd60e51b815260206004820181905260248201527f466972737420746f6b656e7320666f7262696464656e20746f2072656d6f76656044820152606401610719565b600c610911600185612789565b8154811061092157610921612744565b600091825260209091200154600c80546001600160a01b03909216918490811061094d5761094d612744565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600c80548061098c5761098c6127a0565b600082815260209020810160001990810180546001600160a01b031916905501905550505050565b60006001600160a01b0382166106af565b6109d1828260006111ce565b6001600160a01b03909316600090815260076020908152604080832060069092529091209390935590915550565b60006106af826113be565b600c8181548110610a1a57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260408120544210610a5b57506000919050565b6001600160a01b038216600090815260056020526040812054610a7f904290612789565b6001600160a01b038416600090815260046020526040902054909150670de0b6b3a764000090610aaf90836127b6565b6106c191906127d5565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b015760405162461bcd60e51b8152600401610719906127f7565b60008211610b215760405162461bcd60e51b81526004016107199061281a565b6000610b2c82610ead565b9050610b3881846113e0565b806001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436484604051610b7391815260200190565b60405180910390a2505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bc85760405162461bcd60e51b8152600401610719906127f7565b6040516331a9108f60e11b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c54919061283f565b9050610c69610c6284610ead565b8383611436565b505050565b610c788282611730565b5050565b6001600160a01b0381166000908152600b60205260408120546106af565b6001546001600160a01b03163314610ce35760405162461bcd60e51b815260206004820152600c60248201526b2737ba1037b832b930ba37b960a11b6044820152606401610719565b610cec81611ac1565b50565b60006106af82611bd0565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d425760405162461bcd60e51b8152600401610719906127f7565b60008211610d625760405162461bcd60e51b81526004016107199061281a565b6000610d6d82610ead565b9050610d798184611c7b565b806001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c84604051610b7391815260200190565b60405163430c208160e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa158015610e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e43919061285c565b610e815760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b6044820152606401610719565b610c78610e8d83610ead565b8233611436565b600080610ea18484611cc2565b915091505b9250929050565b600081806001600160a01b038116146106af5760405162461bcd60e51b815260206004820152600d60248201526c15dc9bdb99c818dbdb9d995c9d609a1b6044820152606401610719565b6001600160a01b0382166000908152600f6020526040812054808203610f225760009150506106af565b6001600160a01b0384166000908152600e60205260409020610f45908285611d4c565b949350505050565b6001600160a01b0381166000908152600f60205260408120548103610f74575060006106af565b6001600160a01b03808416600081815260086020908152604080832094871683529381528382205492825260128152838220828052905291822054610fb99190611e92565b90506000610fc78483610ef8565b6001600160a01b0385166000908152600f602052604081205491925090610ff090600190612789565b90506000811561110257825b611007600184612789565b8111611100576001600160a01b0387166000818152600e60208181526040808420868552808352818520825180840190935280548352600190810154838501529585529290915292829061105c90869061287e565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600061109b8b8460000151611cc2565b50905060006110ae8c8460000151611cc2565b509050670de0b6b3a76400006110c48383612789565b85602001516110d391906127b6565b6110dd91906127d5565b6110e7908761287e565b95505050505080806110f890612770565b915050610ffc565b505b6001600160a01b0386166000908152600e6020908152604080832085845282528083208151808301909252805480835260019091015492820192909252919061114c908a90611cc2565b506001600160a01b03808b166000908152600960209081526040808320938d1683529290522054909150670de0b6b3a76400009061118b908390611e92565b6111948b611bd0565b61119e9190612789565b83602001516111ad91906127b6565b6111b791906127d5565b6111c1908461287e565b9998505050505050505050565b6001600160a01b038316600090815260066020908152604080832054600790925282205460115483929190830361120857925090506113b6565b6001600160a01b03871660009081526004602052604081205490036112335792504291506113b69050565b600061123e836113be565b9050600061125a60016011546112549190612789565b89611ea9565b9050801561133357815b61126f600183612789565b811161133157600081815260106020908152604091829020825180840190935280548352600101549082018190521561131e5760006010816112b285600161287e565b81526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000806112fd8e8460000151866000015187602001518d611eb8565b909250905061130c828961287e565b97506113198e8983611f3c565b975050505b508061132981612770565b915050611264565b505b86156113ad5760008181526010602090815260409182902082518084019093528054835260010154908201819052156113ab57600061138c8b6113758d612045565b8451611381908a611e92565b85602001518a611eb8565b509050611399818661287e565b94506113a68b8642611f3c565b429550505b505b50909350909150505b935093915050565b6011546000908082036113d45750600092915050565b6106c160108285611d4c565b6113e8612069565b80600a60008282546113fa9190612789565b90915550506001600160a01b0382166000908152600b602052604081208054839290611427908490612789565b90915550610c789050826120ed565b6000546001146114795760405162461bcd60e51b815260206004820152600e60248201526d1499595b9d1c985b9d0818d85b1b60921b6044820152606401610719565b600260009081555b825181101561171c576114b183828151811061149f5761149f612744565b602002602001015160001960016111ce565b600760008685815181106114c7576114c7612744565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006006600088878151811061150757611507612744565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000849190505583919050555050600061156284838151811061155457611554612744565b602002602001015186610f4d565b9050426008600086858151811061157b5761157b612744565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b0316815260200190815260200160002081905550600760008584815181106115e0576115e0612744565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020546009600086858151811061161f5761161f612744565b6020908102919091018101516001600160a01b0390811683528282019390935260409182016000908120938a168152929052902055801561169157611691838286858151811061167157611671612744565b60200260200101516001600160a01b03166121709092919063ffffffff16565b8382815181106116a3576116a3612744565b60200260200101516001600160a01b0316336001600160a01b03167fe4394b3c25e336e9d6b7fcefab7e3234f1c6b373f13655dc3920664b080b098d83866040516117019291909182526001600160a01b0316602082015260400190565b60405180910390a3508061171481612770565b915050611481565b50611726836120ed565b5050600160005550565b6000546001146117735760405162461bcd60e51b815260206004820152600e60248201526d1499595b9d1c985b9d0818d85b1b60921b6044820152606401610719565b60026000556001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116908316036117f35760405162461bcd60e51b815260206004820152601760248201527f57726f6e6720746f6b656e20666f7220726577617264730000000000000000006044820152606401610719565b600081116118135760405162461bcd60e51b81526004016107199061281a565b6001600160a01b0382166000908152600d602052604090205460ff1661186f5760405162461bcd60e51b8152602060048201526011602482015270151bdad95b881b9bdd08185b1b1bddd959607a1b6044820152606401610719565b6001600160a01b038216600090815260046020526040812054900361189a5761189a82600042611f3c565b6118a88260001960016111ce565b6001600160a01b0384166000908152600760209081526040808320600683528184209490945593909255600590915220544210611932576118f46001600160a01b0383163330846121d3565b62093a8061190a670de0b6b3a7640000836127b6565b61191491906127d5565b6001600160a01b038316600090815260046020526040902055611a52565b6001600160a01b038216600090815260056020526040812054611956904290612789565b6001600160a01b0384166000908152600460205260408120549192509061197d90836127b6565b9050611991670de0b6b3a7640000826127d5565b83116119f65760405162461bcd60e51b815260206004820152602e60248201527f416d6f756e742073686f756c6420626520686967686572207468616e2072656d60448201526d61696e696e67207265776172647360901b6064820152608401610719565b611a0b6001600160a01b0385163330866121d3565b62093a8081611a22670de0b6b3a7640000866127b6565b611a2c919061287e565b611a3691906127d5565b6001600160a01b03851660009081526004602052604090205550505b611a5f62093a804261287e565b6001600160a01b0383166000818152600560205260409081902092909255905133907ff70d5c697de7ea828df48e5c4573cb2194c659f1901f70110c52b066dcf5082690611ab09085815260200190565b60405180910390a350506001600055565b600c54600a11611b0c5760405162461bcd60e51b8152602060048201526016602482015275546f6f206d616e792072657761726420746f6b656e7360501b6044820152606401610719565b6001600160a01b0381166000908152600d602052604090205460ff1615611b6a5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606401610719565b6001600160a01b03166000818152600d60205260408120805460ff19166001908117909155600c805491820181559091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319169091179055565b6000600254600003611bf857506001600160a01b031660009081526007602052604090205490565b6002546001600160a01b03831660009081526004602090815260408083205460068352818420546005909352922054611c319190611ea9565b611c3a85612045565b611c449190612789565b611c4e91906127b6565b611c5891906127d5565b6001600160a01b0383166000908152600760205260409020546106af919061287e565b611c83612069565b80600a6000828254611c95919061287e565b90915550506001600160a01b0382166000908152600b60205260408120805483929061142790849061287e565b6001600160a01b0382166000908152601360205260408120548190808203611cf1576000809250925050610ea6565b6001600160a01b038516600090815260126020526040812090611d15828488611d4c565b6000908152602092835260409081902081518083019092528054808352600190910154919093018190529791965090945050505050565b600082600003611d925760405162461bcd60e51b8152602060048201526011602482015270456d70747920636865636b706f696e747360781b6044820152606401610719565b81846000611da1600187612789565b81526020019081526020016000206000015411611dca57611dc3600184612789565b90506106c1565b600080805260208590526040902054821015611de8575060006106c1565b600080611df6600186612789565b90505b81811115611e895760006002611e0f8484612789565b611e1991906127d5565b611e239083612789565b60008181526020898152604091829020825180840190935280548084526001909101549183019190915291925090869003611e63575092506106c1915050565b8051861115611e7457819350611e82565b611e7f600183612789565b92505b5050611df9565b50949350505050565b600081831015611ea257816106c1565b5090919050565b6000818310611ea257816106c1565b6000806000611ec78785611e92565b6001600160a01b038916600090815260056020908152604080832054600490925290912054919250908690611f05611eff8a89611e92565b84611ea9565b611f0f8585611ea9565b611f199190612789565b611f2391906127b6565b611f2d91906127d5565b99919850909650505050505050565b6001600160a01b0383166000908152601360205260409020548015801590611f9857506001600160a01b03841660009081526012602052604081208391611f84600185612789565b815260200190815260200160002060000154145b15611fdb576001600160a01b03841660009081526012602052604081208491611fc2600185612789565b815260208101919091526040016000206001015561203f565b60408051808201825283815260208082018681526001600160a01b03881660009081526012835284812086825290925292902090518155905160019182015561202590829061287e565b6001600160a01b0385166000908152601360205260409020555b50505050565b6001600160a01b0381166000908152600560205260408120546106af904290611ea9565b600c5460005b81811015610c78576000600c828154811061208c5761208c612744565b6000918252602090912001546001600160a01b031690506120b18160001960016111ce565b6001600160a01b0390921660009081526007602090815260408083206006909252909120929092559055806120e581612770565b91505061206f565b6001600160a01b0381166000908152600360205260408120546002805491928392612119908490612789565b9091555050506001600160a01b0381166000908152600b602090815260408083205460039092528220819055600280549192839261215890849061287e565b909155506121689050828261220b565b610c786122fc565b6040516001600160a01b038316602482015260448101829052610c6990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526123a0565b6040516001600160a01b038085166024830152831660448201526064810182905261203f9085906323b872dd60e01b9060840161219c565b6001600160a01b0382166000908152600f60205260409020544290801580159061226957506001600160a01b0384166000908152600e602052604081208391612255600185612789565b815260200190815260200160002060000154145b15612293576001600160a01b0384166000908152600e602052604081208491611fc2600185612789565b60408051808201825283815260208082018681526001600160a01b0388166000908152600e83528481208682529092529290209051815590516001918201556122dd90829061287e565b6001600160a01b0385166000908152600f602052604090205550505050565b60115442811580159061232e5750806010600061231a600186612789565b815260200190815260200160002060000154145b1561235d5760025460106000612345600186612789565b81526020810191909152604001600020600101555050565b6040805180820182528281526002546020808301918252600086815260109091529290922090518155905160019182015561239990839061287e565b6011555050565b60006123f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124729092919063ffffffff16565b805190915015610c695780806020019051810190612413919061285c565b610c695760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610719565b60606001600160a01b0384163b6124cb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610719565b600080856001600160a01b0316856040516124e691906128c2565b6000604051808303816000865af19150503d8060008114612523576040519150601f19603f3d011682016040523d82523d6000602084013e612528565b606091505b5091509150612538828286612542565b9695505050505050565b606083156125515750816106c1565b8251156125615782518084602001fd5b8160405162461bcd60e51b815260040161071991906128de565b6001600160a01b0381168114610cec57600080fd5b803561259b8161257b565b919050565b600080604083850312156125b357600080fd5b82356125be8161257b565b946020939093013593505050565b6000602082840312156125de57600080fd5b5035919050565b600080604083850312156125f857600080fd5b82356126038161257b565b915060208301356126138161257b565b809150509250929050565b60006020828403121561263057600080fd5b81356106c18161257b565b6000806040838503121561264e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561268657600080fd5b8235915060208084013567ffffffffffffffff808211156126a657600080fd5b818601915086601f8301126126ba57600080fd5b8135818111156126cc576126cc61265d565b8060051b604051601f19603f830116810181811085821117156126f1576126f161265d565b60405291825284820192508381018501918983111561270f57600080fd5b938501935b828510156127345761272585612590565b84529385019392850192612714565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016127825761278261275a565b5060010190565b60008282101561279b5761279b61275a565b500390565b634e487b7160e01b600052603160045260246000fd5b60008160001904831182151516156127d0576127d061275a565b500290565b6000826127f257634e487b7160e01b600052601260045260246000fd5b500490565b6020808252600990820152682737ba103b37ba32b960b91b604082015260600190565b6020808252600b908201526a16995c9bc8185b5bdd5b9d60aa1b604082015260600190565b60006020828403121561285157600080fd5b81516106c18161257b565b60006020828403121561286e57600080fd5b815180151581146106c157600080fd5b600082198211156128915761289161275a565b500190565b60005b838110156128b1578181015183820152602001612899565b8381111561203f5750506000910152565b600082516128d4818460208701612896565b9190910192915050565b60208152600082518060208401526128fd816040850160208701612896565b601f01601f1916919091016040019291505056fea26469706673582212201507180997ee5b6eab0faabb14fda951bf08d8a91360305938d876a31e4804dd64736f6c634300080d0033";

export class Bribe__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _voter: string,
    _allowedRewardTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bribe> {
    return super.deploy(
      _voter,
      _allowedRewardTokens,
      overrides || {}
    ) as Promise<Bribe>;
  }
  getDeployTransaction(
    _voter: string,
    _allowedRewardTokens: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _voter,
      _allowedRewardTokens,
      overrides || {}
    );
  }
  attach(address: string): Bribe {
    return super.attach(address) as Bribe;
  }
  connect(signer: Signer): Bribe__factory {
    return super.connect(signer) as Bribe__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BribeInterface {
    return new utils.Interface(_abi) as BribeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bribe {
    return new Contract(address, _abi, signerOrProvider) as Bribe;
  }
}
