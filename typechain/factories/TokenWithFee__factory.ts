/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenWithFee, TokenWithFeeInterface } from "../TokenWithFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_anyswapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "effectiveTime",
        type: "uint256",
      },
    ],
    name: "LogChangeVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anyswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pendingRouter",
        type: "address",
      },
    ],
    name: "changeVault",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAnyswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRouterDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003553480156200001657600080fd5b506040516200125338038062001253833981016040819052620000399162000363565b600880546001600160a01b0319166001600160a01b038316179055835162000069906001906020870190620001f0565b5082516200007f906000906020860190620001f0565b50600282905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90620000ba9060019062000434565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f1981840301815291905280516020909101206006556200014533600062000151565b505050505050620004fe565b6001600160a01b0382166000908152600460205260408120805483919083906200017d908490620004d7565b925050819055508160036000828254620001989190620004d7565b909155505060408051600081526001600160a01b03851660208201529081018390527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a150600192915050565b828054620001fe90620003f8565b90600052602060002090601f0160209004810192826200022257600085556200026d565b82601f106200023d57805160ff19168380011785556200026d565b828001600101855582156200026d579182015b828111156200026d57825182559160200191906001019062000250565b506200027b9291506200027f565b5090565b5b808211156200027b576000815560010162000280565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002be57600080fd5b81516001600160401b0380821115620002db57620002db62000296565b604051601f8301601f19908116603f0116810190828211818310171562000306576200030662000296565b816040528381526020925086838588010111156200032357600080fd5b600091505b8382101562000347578582018301518183018401529082019062000328565b83821115620003595760008385830101525b9695505050505050565b600080600080608085870312156200037a57600080fd5b84516001600160401b03808211156200039257600080fd5b620003a088838901620002ac565b95506020870151915080821115620003b757600080fd5b50620003c687828801620002ac565b60408701516060880151919550935090506001600160a01b0381168114620003ed57600080fd5b939692955090935050565b600181811c908216806200040d57607f821691505b6020821081036200042e57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200045157607f831692505b602080841082036200047157634e487b7160e01b86526022600452602486fd5b8180156200048857600181146200049a57620004c9565b60ff19861689528489019650620004c9565b60008a81526020902060005b86811015620004c15781548b820152908501908301620004a6565b505084890196505b509498975050505050505050565b60008219821115620004f957634e487b7160e01b600052601160045260246000fd5b500190565b610d45806200050e6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637ecebe00116100b8578063d294f0931161007c578063d294f093146102bd578063d505accf146102d1578063db5de796146102e6578063dd62ed3e146102ef578063e3d670d71461031a578063fc0c546a1461034357600080fd5b80637ecebe001461025c57806395d89b411461027c5780639a3eb6e9146102845780639dc29fac14610297578063a9059cbb146102aa57600080fd5b806330adf81f1161010a57806330adf81f146101dd578063313ce567146102045780633644e5151461020d57806340c10f191461021657806360e232a91461022957806370a082311461023c57600080fd5b806306fdde0314610147578063095ea7b3146101655780630ed1713a1461018857806318160ddd146101b357806323b872dd146101ca575b600080fd5b61014f610349565b60405161015c9190610a7a565b60405180910390f35b610178610173366004610aeb565b6103d7565b604051901515815260200161015c565b60095461019b906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b6101bc60035481565b60405190815260200161015c565b6101786101d8366004610b15565b610442565b6101bc7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6101bc60025481565b6101bc60065481565b610178610224366004610aeb565b6104bc565b610178610237366004610b51565b6104d2565b6101bc61024a366004610b51565b60046020526000908152604090205481565b6101bc61026a366004610b51565b60076020526000908152604090205481565b61014f6105c3565b60085461019b906001600160a01b031681565b6101786102a5366004610aeb565b6105d0565b6101786102b8366004610aeb565b610670565b60408051600080825260208201520161015c565b6102e46102df366004610b6c565b610684565b005b6101bc600a5481565b6101bc6102fd366004610bdf565b600560209081526000928352604080842090915290825290205481565b6101bc610328366004610b51565b6001600160a01b031660009081526004602052604090205490565b3061019b565b6001805461035690610c12565b80601f016020809104026020016040519081016040528092919081815260200182805461038290610c12565b80156103cf5780601f106103a4576101008083540402835291602001916103cf565b820191906000526020600020905b8154815290600101906020018083116103b257829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b03871684529091528082208490555190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591610431919086908690610c4c565b60405180910390a150600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205460001981146104a8576001600160a01b0385166000908152600560209081526040808320338452909152812080548592906104a2908490610c86565b90915550505b6104b38585856108f0565b95945050505050565b60006104c883836109aa565b5060019392505050565b60006104dc610a27565b6001600160a01b0316336001600160a01b0316146104f957600080fd5b6001600160a01b0382166105545760405162461bcd60e51b815260206004820152601c60248201527f416e7973776170563345524332303a206164647265737328307830290000000060448201526064015b60405180910390fd5b600980546001600160a01b0319166001600160a01b03841617905561057c4262015180610c9d565b600a8190556008546040516001600160a01b038086169216907f5c364079e7102c27c608f9b237c735a1b7bfa0b67f27c2ad26bad447bf965cac90600090a4506001919050565b6000805461035690610c12565b60006105da610a27565b6001600160a01b0316336001600160a01b0316146105f757600080fd5b81600360008282546106099190610c86565b90915550506001600160a01b03831660009081526004602052604081208054849290610636908490610c86565b90915550506040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104319085906000908690610c4c565b600061067d3384846108f0565b9392505050565b428410156106c85760405162461bcd60e51b815260206004820152601160248201527014dd18589b19558c4e8811561412549151607a1b604482015260640161054b565b6006546001600160a01b038816600090815260076020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761071b83610cb5565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161079492919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156107ff573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906108355750886001600160a01b0316816001600160a01b0316145b6108815760405162461bcd60e51b815260206004820152601b60248201527f537461626c6556313a20494e56414c49445f5349474e41545552450000000000604482015260640161054b565b6001600160a01b03808a166000908152600560209081526040808320938c168352929052819020889055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108dd908b908b908b90610c4c565b60405180910390a1505050505050505050565b6001600160a01b03831660009081526004602052604081208054839190839061091a908490610c86565b90915550600a905061092d836009610cce565b6109379190610ced565b6001600160a01b0384166000908152600460205260408120805490919061095f908490610c9d565b90915550506040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061099890869086908690610c4c565b60405180910390a15060019392505050565b6001600160a01b0382166000908152600460205260408120805483919083906109d4908490610c9d565b9250508190555081600360008282546109ed9190610c9d565b90915550506040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104319060009086908690610c4c565b6000600a54600014158015610a3d575042600a54105b15610a6a57600954600880546001600160a01b0319166001600160a01b039092169190911790556000600a555b506008546001600160a01b031690565b600060208083528351808285015260005b81811015610aa757858101830151858201604001528201610a8b565b81811115610ab9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ae657600080fd5b919050565b60008060408385031215610afe57600080fd5b610b0783610acf565b946020939093013593505050565b600080600060608486031215610b2a57600080fd5b610b3384610acf565b9250610b4160208501610acf565b9150604084013590509250925092565b600060208284031215610b6357600080fd5b61067d82610acf565b600080600080600080600060e0888a031215610b8757600080fd5b610b9088610acf565b9650610b9e60208901610acf565b95506040880135945060608801359350608088013560ff81168114610bc257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610bf257600080fd5b610bfb83610acf565b9150610c0960208401610acf565b90509250929050565b600181811c90821680610c2657607f821691505b602082108103610c4657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610c9857610c98610c70565b500390565b60008219821115610cb057610cb0610c70565b500190565b600060018201610cc757610cc7610c70565b5060010190565b6000816000190483118215151615610ce857610ce8610c70565b500290565b600082610d0a57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212202d1a9c7b0b35f2839f30755790a5a052cb9cfd7dc2a9c054f8cffd203f59454064736f6c634300080d0033";

export class TokenWithFee__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _anyswapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenWithFee> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _anyswapRouter,
      overrides || {}
    ) as Promise<TokenWithFee>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _anyswapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _anyswapRouter,
      overrides || {}
    );
  }
  attach(address: string): TokenWithFee {
    return super.attach(address) as TokenWithFee;
  }
  connect(signer: Signer): TokenWithFee__factory {
    return super.connect(signer) as TokenWithFee__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenWithFeeInterface {
    return new utils.Interface(_abi) as TokenWithFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenWithFee {
    return new Contract(address, _abi, signerOrProvider) as TokenWithFee;
  }
}
