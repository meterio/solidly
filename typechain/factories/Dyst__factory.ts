/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dyst, DystInterface } from "../Dyst";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50600380546001600160a01b0319163390811790915561003590600061003b565b5061014c565b60006001600160a01b0383166100975760405162461bcd60e51b815260206004820152601e60248201527f445953543a204d696e7420746f20746865207a65726f20616464726573730000604482015260640160405180910390fd5b6001600160a01b038316600090815260016020526040812080548492906100bf908490610126565b92505081905550816000808282546100d79190610126565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600192915050565b6000821982111561014757634e487b7160e01b600052601160045260246000fd5b500190565b6108ae8061015b6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461018e57806370a08231146101a157806395d89b41146101c1578063a9059cbb146101e4578063dd62ed3e146101f7578063fca3b5aa1461022257600080fd5b806306fdde03146100b957806307546172146100fc578063095ea7b31461012757806318160ddd1461014a57806323b872dd14610161578063313ce56714610174575b600080fd5b6100e66040518060400160405280600e81526020016d223cb9ba37b834b0903a37b5b2b760911b81525081565b6040516100f3919061072d565b60405180910390f35b60035461010f906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b61013a61013536600461079e565b610237565b60405190151581526020016100f3565b61015360005481565b6040519081526020016100f3565b61013a61016f3660046107c8565b610303565b61017c601281565b60405160ff90911681526020016100f3565b61013a61019c36600461079e565b6103fb565b6101536101af366004610804565b60016020526000908152604090205481565b6100e660405180604001604052806004815260200163111654d560e21b81525081565b61013a6101f236600461079e565b61045f565b61015361020536600461081f565b600260209081526000928352604080842090915290825290205481565b610235610230366004610804565b610473565b005b60006001600160a01b03831661029e5760405162461bcd60e51b815260206004820152602160248201527f445953543a20417070726f766520746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b6001600160a01b038316600090815260026020908152604080832033808552925282205460001981146103e657838110156103805760405162461bcd60e51b815260206004820152601c60248201527f445953543a20496e73756666696369656e7420616c6c6f77616e6365000000006044820152606401610295565b6001600160a01b03868116600081815260026020908152604080832094871680845294825291829020888603908190559151828152919392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b6103f18686866104e2565b9695505050505050565b6003546000906001600160a01b0316331461044b5760405162461bcd60e51b815260206004820152601060248201526f222ca9aa1d102737ba1036b4b73a32b960811b6044820152606401610295565b6104558383610652565b5060019392505050565b600061046c3384846104e2565b9392505050565b6003546001600160a01b031633146104c05760405162461bcd60e51b815260206004820152601060248201526f222ca9aa1d102737ba1036b4b73a32b960811b6044820152606401610295565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0383166105455760405162461bcd60e51b815260206004820152602260248201527f445953543a205472616e7366657220746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610295565b6001600160a01b038416600090815260016020526040902054828110156105bc5760405162461bcd60e51b815260206004820152602560248201527f445953543a205472616e7366657220616d6f756e7420657863656564732062616044820152646c616e636560d81b6064820152608401610295565b6001600160a01b038086166000908152600160205260408082208685039055918616815290812080548592906105f3908490610852565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161063f91815260200190565b60405180910390a3506001949350505050565b60006001600160a01b0383166106aa5760405162461bcd60e51b815260206004820152601e60248201527f445953543a204d696e7420746f20746865207a65726f206164647265737300006044820152606401610295565b6001600160a01b038316600090815260016020526040812080548492906106d2908490610852565b92505081905550816000808282546106ea9190610852565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102f2565b600060208083528351808285015260005b8181101561075a5785810183015185820160400152820161073e565b8181111561076c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461079957600080fd5b919050565b600080604083850312156107b157600080fd5b6107ba83610782565b946020939093013593505050565b6000806000606084860312156107dd57600080fd5b6107e684610782565b92506107f460208501610782565b9150604084013590509250925092565b60006020828403121561081657600080fd5b61046c82610782565b6000806040838503121561083257600080fd5b61083b83610782565b915061084960208401610782565b90509250929050565b6000821982111561087357634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212207d3e3a5380f7eda3db766a00a24c7709a36dffaafaede19112514dc9a86e0ace64736f6c634300080d0033";

export class Dyst__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dyst> {
    return super.deploy(overrides || {}) as Promise<Dyst>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Dyst {
    return super.attach(address) as Dyst;
  }
  connect(signer: Signer): Dyst__factory {
    return super.connect(signer) as Dyst__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DystInterface {
    return new utils.Interface(_abi) as DystInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Dyst {
    return new Contract(address, _abi, signerOrProvider) as Dyst;
  }
}
