/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Controller, ControllerInterface } from "../Controller";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "SetGovernance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "SetVeDist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "SetVoter",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "setVeDist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "setVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "veDist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556103a3806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635aa6e6751161005b5780635aa6e675146100ec578063ab033ea9146100ff578063c13270f114610112578063f39c38a01461012557600080fd5b8063238efcbc1461008d57806327e652781461009757806346c96aac146100aa5780634bc2a657146100d9575b600080fd5b610095610138565b005b6100956100a536600461031c565b6101ad565b6003546100bd906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100956100e736600461031c565b61022c565b6000546100bd906001600160a01b031681565b61009561010d36600461031c565b6102a4565b6002546100bd906001600160a01b031681565b6001546100bd906001600160a01b031681565b6001546001600160a01b031633146101895760405162461bcd60e51b815260206004820152600f60248201526e2737ba103832b73234b7339033b7bb60891b60448201526064015b60405180910390fd5b600154600080546001600160a01b0319166001600160a01b03909216919091179055565b6000546001600160a01b031633146101d75760405162461bcd60e51b81526004016101809061034c565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f427d619a0a9852319231312bf3a2f7e361f12399aae2c315cc710a8055cc6ba3906020015b60405180910390a150565b6000546001600160a01b031633146102565760405162461bcd60e51b81526004016101809061034c565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d290602001610221565b6000546001600160a01b031633146102ce5760405162461bcd60e51b81526004016101809061034c565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f24a8c4807b324a269a51827c3446b8ac1cc13810d7d0c0ca1efafabddd7b621990602001610221565b60006020828403121561032e57600080fd5b81356001600160a01b038116811461034557600080fd5b9392505050565b6020808252600790820152662737ba1033b7bb60c91b60408201526060019056fea264697066735822122095698458e3b6cbfc696d9543e4231581f4eed9371be29ccdea87bc8c1ed5691e64736f6c634300080d0033";

export class Controller__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Controller> {
    return super.deploy(overrides || {}) as Promise<Controller>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Controller {
    return super.attach(address) as Controller;
  }
  connect(signer: Signer): Controller__factory {
    return super.connect(signer) as Controller__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ControllerInterface {
    return new utils.Interface(_abi) as ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Controller {
    return new Contract(address, _abi, signerOrProvider) as Controller;
  }
}
